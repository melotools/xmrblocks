name: DockerHub Publish

on:
  push:
    branches: [ master ]

env:
  IMAGE_NAME: melotools/monero-explorer


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest Monero tag
        id: get_latest_monero_tag
        run: echo "::set-output name=latest_tag::$(curl -s https://api.github.com/repos/monero-project/monero/tags | grep -i name | awk 'NR==1{print $2}' | tr -d "\",")"

      - name: Log into Dockerhub
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull "dependencies1" if it exists
        run: docker pull $IMAGE_NAME:dependencies1 || true

      - name: Build updated "dependencies1" if necessary
        run: docker build --pull
          --target dependencies1
          --cache-from $IMAGE_NAME:dependencies1
          -f ./Dockerfile
          -t $IMAGE_NAME:dependencies1 .

      - name: Push "dependencies1"
        run: docker push $IMAGE_NAME:dependencies1

      - name: Pull "builder_monero" if it exists
        run: docker pull $IMAGE_NAME:builder_monero || true

      - name: Build updated "builder_monero" if necessary
        run: docker build --pull
          --target builder_monero
          --cache-from $IMAGE_NAME:builder_monero
          --cache-from $IMAGE_NAME:builder_monero
          --build-arg BRANCH=${{ steps.get_latest_monero_tag.outputs.latest_tag }}
          --build-arg BUILD_BRANCH=${{ steps.get_latest_monero_tag.outputs.latest_tag }}
          -f ./Dockerfile
          -t $IMAGE_NAME:builder_monero .

      - name: Push "builder_monero"
        run: docker push $IMAGE_NAME:builder_monero

      - name: Pull "builder" if it exists
        run: docker pull $IMAGE_NAME:builder || true

      - name: Build updated "builder" if necessary
        run: docker build --pull
          --target builder
          --cache-from $IMAGE_NAME:dependencies1
          --cache-from $IMAGE_NAME:builder_monero
          --cache-from $IMAGE_NAME:builder
          -f ./Dockerfile
          -t $IMAGE_NAME:builder .

      - name: Push "builder"
        run: docker push $IMAGE_NAME:builder

      - name: Pull final image if it exists
        run: docker pull $IMAGE_NAME || true

      - name: Build updated final image if necessary
        run: docker build --pull
          --cache-from $IMAGE_NAME:dependencies1
          --cache-from $IMAGE_NAME:builder_monero
          --cache-from $IMAGE_NAME:builder
          --cache-from $IMAGE_NAME
          -f ./Dockerfile
          -t $IMAGE_NAME:most_recent_tag .

      - name: Tag the image with its Monero tag as well
        run: docker tag $IMAGE_NAME:most_recent_tag $IMAGE_NAME:${{ steps.get_latest_monero_tag.outputs.latest_tag }}

      - name: Push the image tagged with its Monero tag as well
        run: docker push $IMAGE_NAME:${{ steps.get_latest_monero_tag.outputs.latest_tag }}

      - name: Tag the image as latest as well
        run: docker tag $IMAGE_NAME:most_recent_tag $IMAGE_NAME:latest

      - name: Push the image tagged as latest as well
        run: docker push $IMAGE_NAME:latest
